{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smhmu\\\\projects\\\\reddit_data_helper\\\\reddit_search_frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js - Main React component to display the summary\nimport React, { useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [keyword, setKeyword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [summary, setSummary] = useState(null);\n  const [sourceFile, setSourceFile] = useState('');\n  const [fetchDate, setFetchDate] = useState('');\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (!keyword.trim()) {\n      alert('Please enter a search keyword');\n      return;\n    }\n    try {\n      // Set loading state and clear previous results\n      setIsLoading(true);\n      setError(null);\n      setSummary(null);\n      console.log(`Sending search request for keyword: ${keyword}`);\n\n      // Make API call to Node.js backend which will:\n      // 1. Search Reddit\n      // 2. Save data to file\n      // 3. Send file to Python\n      // 4. Return summary to React\n      const response = await axios.post('http://localhost:3001/api/search', {\n        keyword\n      });\n      console.log('Received response from backend:', response.data);\n\n      // Check if we received a valid summary response\n      if (response.data && response.data.success) {\n        // Update state with the summary data\n        setSummary(response.data.summary);\n        setSourceFile(response.data.sourceFile);\n        setFetchDate(response.data.fetchDate);\n        console.log('Summary displayed successfully');\n      } else {\n        setError('No valid summary data received from backend');\n      }\n    } catch (err) {\n      console.error('Error processing search request:', err);\n      setError('Failed to fetch summary. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Reddit Search Tool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-form\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSearch,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"keyword\",\n              children: \"Search Keyword:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"keyword\",\n              value: keyword,\n              onChange: e => setKeyword(e.target.value),\n              placeholder: \"e.g., lexus ls430\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isLoading,\n            children: isLoading ? 'Processing...' : 'Search Reddit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Processing your request...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Searching Reddit data and generating AI summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 23\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }, this), summary && !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"AI-Generated Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Search keyword:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 18\n            }, this), \" \", keyword]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Source file:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 18\n            }, this), \" \", sourceFile]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Generated at:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 18\n            }, this), \" \", new Date(fetchDate).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-content\",\n          children: summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-info\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This summary was generated by the Gemini AI model based on the Reddit data matching your search query. The complete data is stored in the output folder on your server.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YgbuGv+M/BOTQblb4xyrkWrsZTA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","keyword","setKeyword","isLoading","setIsLoading","error","setError","summary","setSummary","sourceFile","setSourceFile","fetchDate","setFetchDate","handleSearch","e","preventDefault","trim","alert","console","log","response","post","data","success","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","required","disabled","Date","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/smhmu/projects/reddit_data_helper/reddit_search_frontend/src/App.js"],"sourcesContent":["// App.js - Main React component to display the summary\nimport React, { useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nfunction App() {\n  const [keyword, setKeyword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [summary, setSummary] = useState(null);\n  const [sourceFile, setSourceFile] = useState('');\n  const [fetchDate, setFetchDate] = useState('');\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    \n    if (!keyword.trim()) {\n      alert('Please enter a search keyword');\n      return;\n    }\n    \n    try {\n      // Set loading state and clear previous results\n      setIsLoading(true);\n      setError(null);\n      setSummary(null);\n      \n      console.log(`Sending search request for keyword: ${keyword}`);\n      \n      // Make API call to Node.js backend which will:\n      // 1. Search Reddit\n      // 2. Save data to file\n      // 3. Send file to Python\n      // 4. Return summary to React\n      const response = await axios.post('http://localhost:3001/api/search', { keyword });\n      \n      console.log('Received response from backend:', response.data);\n      \n      // Check if we received a valid summary response\n      if (response.data && response.data.success) {\n        // Update state with the summary data\n        setSummary(response.data.summary);\n        setSourceFile(response.data.sourceFile);\n        setFetchDate(response.data.fetchDate);\n        console.log('Summary displayed successfully');\n      } else {\n        setError('No valid summary data received from backend');\n      }\n    } catch (err) {\n      console.error('Error processing search request:', err);\n      setError('Failed to fetch summary. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Reddit Search Tool</h1>\n      </header>\n      <main>\n        <div className=\"search-form\">\n          <form onSubmit={handleSearch}>\n            <div className=\"form-group\">\n              <label htmlFor=\"keyword\">Search Keyword:</label>\n              <input\n                type=\"text\"\n                id=\"keyword\"\n                value={keyword}\n                onChange={(e) => setKeyword(e.target.value)}\n                placeholder=\"e.g., lexus ls430\"\n                required\n              />\n            </div>\n            \n            <button type=\"submit\" disabled={isLoading}>\n              {isLoading ? 'Processing...' : 'Search Reddit'}\n            </button>\n          </form>\n        </div>\n        \n        {isLoading && <div className=\"loading\">\n          <p>Processing your request...</p>\n          <p>Searching Reddit data and generating AI summary</p>\n        </div>}\n        \n        {error && <div className=\"error\">{error}</div>}\n        \n        {/* Display the summary from the API response */}\n        {summary && !isLoading && (\n          <div className=\"summary-container\">\n            <h2>AI-Generated Summary</h2>\n            <div className=\"summary-meta\">\n              <p><strong>Search keyword:</strong> {keyword}</p>\n              <p><strong>Source file:</strong> {sourceFile}</p>\n              <p><strong>Generated at:</strong> {new Date(fetchDate).toLocaleString()}</p>\n            </div>\n            <div className=\"summary-content\">\n              {summary}\n            </div>\n            <div className=\"search-info\">\n              <p>\n                This summary was generated by the Gemini AI model based on the Reddit data\n                matching your search query. The complete data is stored in the output folder\n                on your server.\n              </p>\n            </div>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}